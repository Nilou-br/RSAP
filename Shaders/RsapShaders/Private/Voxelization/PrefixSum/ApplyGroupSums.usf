#include "/Engine/Public/Platform.ush"

StructuredBuffer<uint> InitialPrefixSums : register(t0);
StructuredBuffer<uint> GroupPrefixSums   : register(t1);
RWStructuredBuffer<uint> OutPrefixSums   : register(u0);
uint NumElements;

[numthreads(THREAD_GROUP_SIZE, 1, 1)]
void Main(uint3 GlobalThreadID : SV_DispatchThreadID, uint3 GroupThreadID : SV_GroupThreadID, uint3 GroupID : SV_GroupID)
{
    const uint GlobalThreadIdx = GlobalThreadID.x;
    if (GlobalThreadIdx >= NumElements) return;
    
    const uint GroupIdx = GroupID.x;
    const uint GlobalTaskOffset = GlobalThreadIdx * TASKS_PER_THREAD;
    
    for (uint TaskIdx = 0; TaskIdx < TASKS_PER_THREAD; ++TaskIdx)
    {
        // Add the corresponding group sum to this element
        const uint GlobalTaskIdx = GlobalTaskOffset + TaskIdx;
        OutPrefixSums[GlobalTaskIdx] = InitialPrefixSums[GlobalTaskIdx] + GroupPrefixSums[GroupIdx];
    }
}